apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "realtime-notes.fullname" . }}
  labels:
    {{- include "realtime-notes.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "realtime-notes.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "realtime-notes.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "realtime-notes.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: grpc
              containerPort: 50051
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: postgresql://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ include "realtime-notes.fullname" . }}-postgresql/{{ .Values.postgresql.postgresqlDatabase }}
            - name: REDIS_URL
              value: redis://:{{ .Values.redis.auth.password }}@{{ include "realtime-notes.fullname" . }}-redis-master/0
            - name: ENVIRONMENT
              value: {{ .Values.config.environment }}
            - name: DEBUG
              value: "{{ .Values.config.debug }}"
            - name: ENABLE_GRPC
              value: "{{ .Values.config.enableGrpc }}"
            - name: AUTH0_DOMAIN
              value: {{ .Values.config.auth0.domain }}
            - name: AUTH0_AUDIENCE
              value: {{ .Values.config.auth0.audience }}
            {{- if .Values.config.auth0.clientId }}
            - name: AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "realtime-notes.fullname" . }}-auth0
                  key: client-id
            {{- end }}
            {{- if .Values.config.auth0.clientSecret }}
            - name: AUTH0_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "realtime-notes.fullname" . }}-auth0
                  key: client-secret
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: indices
              mountPath: /app/indices
      volumes:
        - name: indices
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 